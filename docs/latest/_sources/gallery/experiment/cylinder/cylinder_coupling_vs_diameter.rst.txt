
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/experiment/cylinder/cylinder_coupling_vs_diameter.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_experiment_cylinder_cylinder_coupling_vs_diameter.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_experiment_cylinder_cylinder_coupling_vs_diameter.py:


Cylinder: Coupling vs Diameter
==============================

This example demonstrates how to compute and visualize the coupling efficiency as a function of diameter for cylindrical scatterers using PyMieSim.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Importing the package dependencies: numpy, PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 10-18

.. code-block:: Python

    import numpy as np
    from TypedUnit import ureg

    from PyMieSim.experiment.detector import Photodiode
    from PyMieSim.experiment.scatterer import Sphere
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup








.. GENERATED FROM PYTHON SOURCE LINES 19-20

Defining the source

.. GENERATED FROM PYTHON SOURCE LINES 20-27

.. code-block:: Python

    source = Gaussian(
        wavelength=[100, 1200] * ureg.nanometer,  # 1200 nm
        polarization=90 * ureg.degree,  # Polarization angle in ureg.degrees
        optical_power=1e-3 * ureg.watt,  # 1 milliureg.watt
        NA=0.2 * ureg.AU  # Numerical Aperture
    )








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Defining the scatterer distribution

.. GENERATED FROM PYTHON SOURCE LINES 29-36

.. code-block:: Python

    scatterer = Sphere(
        diameter=np.linspace(100, 300, 200) * ureg.nanometer,  # Diameters ranging from 100 nm to 3000 nm
        property=[1.4] * ureg.RIU,  # Material of the cylinder
        medium_property=1.0 * ureg.RIU,  # Refractive index of the surrounding medium
        source=source
    )








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Defining the detector

.. GENERATED FROM PYTHON SOURCE LINES 38-46

.. code-block:: Python

    detector = Photodiode(
        NA=[0.1] * ureg.AU,  # Numerical Apertures for the detector
        phi_offset=[-180.0] * ureg.degree,  # Phi offset in ureg.degrees
        gamma_offset=[0.0] * ureg.degree,  # Gamma offset in ureg.degrees
        sampling=600 * ureg.AU,  # Number of sampling points
        polarization_filter=None  # No polarization filter
    )








.. GENERATED FROM PYTHON SOURCE LINES 47-48

Setting up the experiment

.. GENERATED FROM PYTHON SOURCE LINES 48-50

.. code-block:: Python

    experiment = Setup(scatterer=scatterer, source=source, detector=detector)








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Measuring the coupling efficiency

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    dataframe = experiment.get('coupling')








.. GENERATED FROM PYTHON SOURCE LINES 55-57

Plotting the results
Visualizing how the coupling efficiency varies with the cylinder diameter.

.. GENERATED FROM PYTHON SOURCE LINES 57-58

.. code-block:: Python

    dataframe.plot(x="scatterer:diameter")



.. image-sg:: /gallery/experiment/cylinder/images/sphx_glr_cylinder_coupling_vs_diameter_001.png
   :alt: cylinder coupling vs diameter
   :srcset: /gallery/experiment/cylinder/images/sphx_glr_cylinder_coupling_vs_diameter_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: xlabel='scatterer:diameter', ylabel='watt'>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.350 seconds)


.. _sphx_glr_download_gallery_experiment_cylinder_cylinder_coupling_vs_diameter.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: cylinder_coupling_vs_diameter.ipynb <cylinder_coupling_vs_diameter.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: cylinder_coupling_vs_diameter.py <cylinder_coupling_vs_diameter.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: cylinder_coupling_vs_diameter.zip <cylinder_coupling_vs_diameter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
