
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/experiment/sphere/sphere_coupling_vs_filter.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_experiment_sphere_sphere_coupling_vs_filter.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_experiment_sphere_sphere_coupling_vs_filter.py:


Sphere: Coupling vs polarization filter
=======================================

.. GENERATED FROM PYTHON SOURCE LINES 8-9

Importing the package dependencies: numpy, PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 9-18

.. code-block:: Python

    import numpy as np

    from PyMieSim.experiment.detector import Photodiode
    from PyMieSim.experiment.scatterer import Sphere
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup
    from PyMieSim.units import degree, nanometer, RIU, watt, AU
    from PyOptik import Material








.. GENERATED FROM PYTHON SOURCE LINES 19-20

Defining the source to be employed.

.. GENERATED FROM PYTHON SOURCE LINES 20-28

.. code-block:: Python

    source = Gaussian(
        wavelength=[950, 1050] * nanometer,
        polarization=0 * degree,
        optical_power=[1e-3] * watt,
        NA=0.2 * AU
    )









.. GENERATED FROM PYTHON SOURCE LINES 29-30

Defining the ranging parameters for the scatterer distribution

.. GENERATED FROM PYTHON SOURCE LINES 30-37

.. code-block:: Python

    scatterer = Sphere(
        diameter=np.linspace(100, 2000, 20) * nanometer,
        property=[Material.BK7, Material.water],
        medium_property=1 * RIU,
        source=source
    )








.. GENERATED FROM PYTHON SOURCE LINES 38-39

Defining the detector to be employed.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: Python

    detector = Photodiode(
        NA=[0.1] * AU,
        phi_offset=-180 * degree,
        gamma_offset=0 * degree,
        polarization_filter=np.linspace(-180, 180, 100) * degree,
        sampling=[500] * AU,
    )








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Defining the experiment setup

.. GENERATED FROM PYTHON SOURCE LINES 49-51

.. code-block:: Python

    experiment = Setup(scatterer=scatterer, source=source, detector=detector)








.. GENERATED FROM PYTHON SOURCE LINES 52-53

Measuring the properties

.. GENERATED FROM PYTHON SOURCE LINES 53-56

.. code-block:: Python

    dataframe = experiment.get('coupling')

    dataframe.plot(x='detector:polarization_filter', std='scatterer:diameter')



.. image-sg:: /gallery/experiment/sphere/images/sphx_glr_sphere_coupling_vs_filter_001.png
   :alt: sphere coupling vs filter
   :srcset: /gallery/experiment/sphere/images/sphx_glr_sphere_coupling_vs_filter_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: xlabel='degree', ylabel='watt'>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.792 seconds)


.. _sphx_glr_download_gallery_experiment_sphere_sphere_coupling_vs_filter.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: sphere_coupling_vs_filter.ipynb <sphere_coupling_vs_filter.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: sphere_coupling_vs_filter.py <sphere_coupling_vs_filter.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: sphere_coupling_vs_filter.zip <sphere_coupling_vs_filter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
