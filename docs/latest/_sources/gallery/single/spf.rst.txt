
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/single/spf.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_single_spf.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_single_spf.py:


SPF Computation
===============

This example demonstrates the computation and visualization of the Scattering Phase Function (SPF) using PyMieSim.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Importing the package: PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 10-15

.. code-block:: Python

    from TypedUnit import ureg

    from PyMieSim.single.scatterer import CoreShell
    from PyMieSim.single.source import Gaussian








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Defining the source

.. GENERATED FROM PYTHON SOURCE LINES 17-24

.. code-block:: Python

    source = Gaussian(
        wavelength=1000 * ureg.nanometer,  # 1000 nm
        polarization=0 * ureg.degree,  # Linear polarization angle in radians
        optical_power=1 * ureg.watt,  # Arbitrary units
        NA=0.3 * ureg.AU,  # Numerical Aperture
    )








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Defining the scatterer

.. GENERATED FROM PYTHON SOURCE LINES 26-35

.. code-block:: Python

    scatterer = CoreShell(
        core_diameter=500 * ureg.nanometer,  # 500 nm
        shell_thickness=100 * ureg.nanometer,  # 100 nm
        source=source,
        core_property=1.4 * ureg.RIU,  # Refractive property of the core
        shell_property=1.8 * ureg.RIU,  # Refractive property of the shell
        medium_property=1.0 * ureg.RIU,  # Refractive property of the surrounding medium
    )








.. GENERATED FROM PYTHON SOURCE LINES 36-37

Computing the data

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: Python

    data = scatterer.get_spf(sampling=300)  # Specify the number of sampling points








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Plotting the data

.. GENERATED FROM PYTHON SOURCE LINES 41-42

.. code-block:: Python

    figure = data.plot()



.. image-sg:: /gallery/single/images/sphx_glr_spf_001.png
   :alt: spf
   :srcset: /gallery/single/images/sphx_glr_spf_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.347 seconds)


.. _sphx_glr_download_gallery_single_spf.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: spf.ipynb <spf.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: spf.py <spf.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: spf.zip <spf.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
