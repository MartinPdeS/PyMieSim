
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/validation/internal/core_shell_empty_shell.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_validation_internal_core_shell_empty_shell.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_validation_internal_core_shell_empty_shell.py:


Effect of Shell dimensions in equivalent medium
===============================================

.. GENERATED FROM PYTHON SOURCE LINES 6-44

.. code-block:: Python


    # Standard library imports
    import numpy as np
    import matplotlib.pyplot as plt
    from TypedUnit import ureg

    # PyMieSim imports
    from PyMieSim.experiment.scatterer import CoreShell
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup

    # Setup parameters
    scatterer_diameter = 0.3 * ureg.micrometer  # Diameter of the scatterer in meters
    scatterer_index = 1.4 * ureg.RIU  # Refractive index of the scatterer
    source_wavelength = 1.2 * ureg.micrometer  # Wavelength of the source in meters

    # Experiment source and scatterer setup
    source = Gaussian(
        wavelength=1.2 * ureg.micrometer,
        polarization=[0, 90] * ureg.degree,
        optical_power=1 * ureg.watt,
        NA=0.2 * ureg.AU,
    )

    scatterer = CoreShell(
        core_diameter=300 * ureg.nanometer,
        shell_thickness=np.linspace(100, 300, 100) * ureg.nanometer,
        core_property=1.4 * ureg.RIU,
        shell_property=1.3 * ureg.RIU,
        medium_property=1.3 * ureg.RIU,
        source=source,
    )


    # Configure experiment
    experiment = Setup(scatterer=scatterer, source=source)

    # Gather data







.. GENERATED FROM PYTHON SOURCE LINES 45-55

.. code-block:: Python

    dataframe = experiment.get("Csca")


    ax = dataframe.plot(x="scatterer:shell_thickness", show=False)

    ax.set_ylim([0, 4.0e-16])

    plt.show()





.. image-sg:: /gallery/validation/internal/images/sphx_glr_core_shell_empty_shell_001.png
   :alt: core shell empty shell
   :srcset: /gallery/validation/internal/images/sphx_glr_core_shell_empty_shell_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 56-58

As it is supposed the scattering Cross-section should not be affected by
the shell thickness as it's refractive index is same as the surrounding medium.

.. GENERATED FROM PYTHON SOURCE LINES 58-64

.. code-block:: Python

    dataframe = experiment.get("Qsca")

    ax = dataframe.plot(x="scatterer:shell_thickness", show=False)

    plt.show()
    # Similarly the scattering decrease as the scatterer becomes technically larger but the effects of the shell is for no account.



.. image-sg:: /gallery/validation/internal/images/sphx_glr_core_shell_empty_shell_002.png
   :alt: core shell empty shell
   :srcset: /gallery/validation/internal/images/sphx_glr_core_shell_empty_shell_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.572 seconds)


.. _sphx_glr_download_gallery_validation_internal_core_shell_empty_shell.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: core_shell_empty_shell.ipynb <core_shell_empty_shell.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: core_shell_empty_shell.py <core_shell_empty_shell.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: core_shell_empty_shell.zip <core_shell_empty_shell.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
