
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/experiment/cylinder/cylinder_Qsca_vs_diameter.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_experiment_cylinder_cylinder_Qsca_vs_diameter.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_experiment_cylinder_cylinder_Qsca_vs_diameter.py:


Cylinder: Qsca vs Diameter
==========================

This example demonstrates how to compute and visualize the scattering efficiency (Qsca) as a function of diameter for cylindrical scatterers using PyMieSim, considering multiple wavelengths.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Importing the package dependencies: numpy, PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 10-16

.. code-block:: Python

    import numpy as np
    from PyMieSim.experiment.scatterer import Cylinder
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup
    from PyMieSim.units import nanometer, degree, watt, AU, RIU








.. GENERATED FROM PYTHON SOURCE LINES 17-18

Defining the source

.. GENERATED FROM PYTHON SOURCE LINES 18-25

.. code-block:: Python

    source = Gaussian(
        wavelength=[500, 1000, 1500] * nanometer,  # Array of wavelengths: 500 nm, 1000 nm, 1500 nm
        polarization=30 * degree,  # Polarization angle in degrees
        optical_power=1e-3 * watt,  # 1 milliwatt
        NA=0.2 * AU  # Numerical Aperture
    )








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Defining the scatterer distribution

.. GENERATED FROM PYTHON SOURCE LINES 27-34

.. code-block:: Python

    scatterer = Cylinder(
        diameter=np.geomspace(6.36, 10000, 1000) * nanometer,  # Diameters ranging from ~6.36 nm to 10000 nm
        property=[1.4] * RIU,  # Refractive index of the cylinder
        medium_property=1 * RIU,  # Refractive index of the surrounding medium
        source=source
    )








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Setting up the experiment

.. GENERATED FROM PYTHON SOURCE LINES 36-38

.. code-block:: Python

    experiment = Setup(scatterer=scatterer, source=source)








.. GENERATED FROM PYTHON SOURCE LINES 39-40

Measuring the scattering efficiency (Qsca)

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: Python

    dataframe = experiment.get('Qsca')








.. GENERATED FROM PYTHON SOURCE LINES 43-45

Plotting the results
Visualizing how the Qsca varies with the cylinder diameter.

.. GENERATED FROM PYTHON SOURCE LINES 45-46

.. code-block:: Python

    dataframe.plot_data(x='scatterer:diameter')



.. image-sg:: /gallery/experiment/cylinder/images/sphx_glr_cylinder_Qsca_vs_diameter_001.png
   :alt: cylinder Qsca vs diameter
   :srcset: /gallery/experiment/cylinder/images/sphx_glr_cylinder_Qsca_vs_diameter_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: xlabel='nanometer', ylabel='dimensionless'>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.667 seconds)


.. _sphx_glr_download_gallery_experiment_cylinder_cylinder_Qsca_vs_diameter.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: cylinder_Qsca_vs_diameter.ipynb <cylinder_Qsca_vs_diameter.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: cylinder_Qsca_vs_diameter.py <cylinder_Qsca_vs_diameter.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: cylinder_Qsca_vs_diameter.zip <cylinder_Qsca_vs_diameter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
