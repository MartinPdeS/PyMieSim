
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/validation/bohren_huffman/figure_87.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_validation_bohren_huffman_figure_87.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_validation_bohren_huffman_figure_87.py:


Cylinder Scatterer Bohren-Huffman figure 8.7
============================================

.. GENERATED FROM PYTHON SOURCE LINES 8-9

Importing the dependencies: numpy, matplotlib, PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 9-63

.. code-block:: Python

    import numpy
    import matplotlib.pyplot as plt

    from PyMieSim.directories import validation_data_path

    from PyMieSim.experiment.scatterer import Cylinder
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup
    from PyMieSim.units import degree, watt, AU, RIU, nanometer

    theoretical = numpy.genfromtxt(f"{validation_data_path}/bohren_huffman/figure_87.csv", delimiter=',')

    diameter = numpy.geomspace(10, 6000, 800) * nanometer
    volume = numpy.pi * (diameter.to_base_units().magnitude / 2)**2

    source = Gaussian(
        wavelength=632.8 * nanometer,
        polarization=[0, 90] * degree,
        optical_power=1e-3 * watt,
        NA=0.2 * AU
    )

    scatterer = Cylinder(
        diameter=diameter,
        property=1.55 * RIU,
        medium_property=1 * RIU,
        source=source
    )

    experiment = Setup(
        scatterer=scatterer,
        source=source,
        detector=None
    )

    dataframe = experiment.get('Csca', add_units=False)

    data = dataframe.squeeze().values.reshape([-1, diameter.size]) / volume * 1e-4 / 100

    print(data.shape)

    plt.figure(figsize=(8, 4))
    plt.plot(diameter, data[0], 'b--', linewidth=3, label='PyMieSim')
    plt.plot(diameter, data[1], 'r-', linewidth=3, label='PyMieSim')

    plt.plot(diameter, theoretical[0], 'k--', linewidth=1, label='BH 8.8')
    plt.plot(diameter, theoretical[1], 'k--', linewidth=1, label='BH 8.8')

    plt.xlabel(r'Diameter [$\mu$m]')
    plt.ylabel('Scattering cross section [cylinder]')
    plt.grid(True)
    plt.legend()
    plt.tight_layout()
    plt.show()



.. image-sg:: /gallery/validation/bohren_huffman/images/sphx_glr_figure_87_001.png
   :alt: figure 87
   :srcset: /gallery/validation/bohren_huffman/images/sphx_glr_figure_87_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (2, 800)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.467 seconds)


.. _sphx_glr_download_gallery_validation_bohren_huffman_figure_87.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: figure_87.ipynb <figure_87.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: figure_87.py <figure_87.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: figure_87.zip <figure_87.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
