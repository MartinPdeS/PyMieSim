
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/experiment/sphere/sphere_coupling_vs_phioffset.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_experiment_sphere_sphere_coupling_vs_phioffset.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_experiment_sphere_sphere_coupling_vs_phioffset.py:


Sphere: Goniometer
==================

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Importing the package dependencies: numpy, PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 10-19

.. code-block:: Python

    import numpy
    from PyMieSim.experiment.detector import Photodiode
    from PyMieSim.experiment.scatterer import Sphere
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup
    from PyMieSim.polarization import RightCircular
    from PyOptik import Material
    from PyMieSim.units import nanometer, degree, watt, AU, RIU








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Defining the source to be employed.

.. GENERATED FROM PYTHON SOURCE LINES 21-27

.. code-block:: Python

    source = Gaussian(
        wavelength=1200 * nanometer,
        polarization=RightCircular(),
        optical_power=1e-3 * watt,
        NA=0.2 * AU
    )







.. GENERATED FROM PYTHON SOURCE LINES 28-29

Defining the ranging parameters for the scatterer distribution

.. GENERATED FROM PYTHON SOURCE LINES 29-36

.. code-block:: Python

    scatterer = Sphere(
        diameter=2000 * nanometer,
        property=Material.BK7,
        medium_property=1 * RIU,
        source=source
    )








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Defining the detector to be employed.

.. GENERATED FROM PYTHON SOURCE LINES 38-47

.. code-block:: Python

    detector = Photodiode(
        NA=[0.1] * AU,
        phi_offset=numpy.linspace(-180, 180, 200) * degree,
        cache_NA=0.05 * AU,
        gamma_offset=0 * degree,
        sampling=400 * AU,
        polarization_filter=None
    )








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Defining the experiment setup

.. GENERATED FROM PYTHON SOURCE LINES 49-51

.. code-block:: Python

    experiment = Setup(scatterer=scatterer, source=source, detector=detector)








.. GENERATED FROM PYTHON SOURCE LINES 52-53

Measuring the properties

.. GENERATED FROM PYTHON SOURCE LINES 53-55

.. code-block:: Python

    dataframe = experiment.get('coupling')








.. GENERATED FROM PYTHON SOURCE LINES 56-57

Plotting the results

.. GENERATED FROM PYTHON SOURCE LINES 57-58

.. code-block:: Python

    dataframe.plot(x="detector:phi_offset")



.. image-sg:: /gallery/experiment/sphere/images/sphx_glr_sphere_coupling_vs_phioffset_001.png
   :alt: sphere coupling vs phioffset
   :srcset: /gallery/experiment/sphere/images/sphx_glr_sphere_coupling_vs_phioffset_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: xlabel='degree', ylabel='watt'>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.278 seconds)


.. _sphx_glr_download_gallery_experiment_sphere_sphere_coupling_vs_phioffset.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: sphere_coupling_vs_phioffset.ipynb <sphere_coupling_vs_phioffset.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: sphere_coupling_vs_phioffset.py <sphere_coupling_vs_phioffset.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: sphere_coupling_vs_phioffset.zip <sphere_coupling_vs_phioffset.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
