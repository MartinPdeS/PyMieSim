
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/extras/array_scattering.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_extras_array_scattering.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_extras_array_scattering.py:


Array-based scattering calculations
===================================

This example demonstrates how to compute far fields, S1/S2 amplitudes and
Stokes parameters using arbitrary ``phi`` and ``theta`` arrays.

.. GENERATED FROM PYTHON SOURCE LINES 8-15

.. code-block:: Python


    import numpy as np
    from PyMieSim.single.scatterer import Sphere
    from PyMieSim.single.source import PlaneWave
    from PyMieSim.units import nanometer, degree, RIU, volt, meter, radian
    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Create a simple plane wave source

.. GENERATED FROM PYTHON SOURCE LINES 17-23

.. code-block:: Python

    source = PlaneWave(
        wavelength=632.8 * nanometer,
        polarization=0 * degree,
        amplitude=1 * volt / meter,
    )








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Define the scatterer

.. GENERATED FROM PYTHON SOURCE LINES 25-36

.. code-block:: Python

    scatterer = Sphere(
        diameter=200 * nanometer,
        property=1.5 * RIU,
        medium_property=1.0 * RIU,
        source=source,
    )

    # Define arbitrary angle arrays
    phi = np.linspace(0, np.pi, 150) * radian
    theta = np.linspace(0, np.pi / 2, 150) * radian








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Far-field complex fields

.. GENERATED FROM PYTHON SOURCE LINES 38-56

.. code-block:: Python

    E_para, E_perp = scatterer.get_farfield_array(phi, theta)

    plt.figure(figsize=(10, 5))
    plt.subplot(1, 2, 1)
    plt.plot(phi, np.abs(E_para), label='E_para')
    plt.title('E_para Far Field')
    plt.xlabel('Phi (radians)')
    plt.ylabel('Magnitude')
    plt.legend()
    plt.subplot(1, 2, 2)
    plt.plot(phi, np.abs(E_perp), label='E_perp', color='orange')
    plt.title('E_perp Far Field')
    plt.xlabel('Phi (radians)')
    plt.ylabel('Magnitude')
    plt.legend()
    plt.tight_layout()
    plt.show()




.. image-sg:: /gallery/extras/images/sphx_glr_array_scattering_001.png
   :alt: E_para Far Field, E_perp Far Field
   :srcset: /gallery/extras/images/sphx_glr_array_scattering_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 57-58

S1 and S2 scattering amplitudes

.. GENERATED FROM PYTHON SOURCE LINES 58-76

.. code-block:: Python

    S1, S2 = scatterer.get_s1s2_array(phi)

    plt.figure(figsize=(10, 5))
    plt.subplot(1, 2, 1)
    plt.plot(phi, np.abs(S1), label='S1')
    plt.title('S1 Scattering Amplitude')
    plt.xlabel('Phi (radians)')
    plt.ylabel('Magnitude')
    plt.legend()
    plt.subplot(1, 2, 2)
    plt.plot(phi, np.abs(S2), label='S2', color='orange')
    plt.title('S2 Scattering Amplitude')
    plt.xlabel('Phi (radians)')
    plt.ylabel('Magnitude')
    plt.legend()
    plt.tight_layout()
    plt.show()




.. image-sg:: /gallery/extras/images/sphx_glr_array_scattering_002.png
   :alt: S1 Scattering Amplitude, S2 Scattering Amplitude
   :srcset: /gallery/extras/images/sphx_glr_array_scattering_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 77-78

Stokes parameters

.. GENERATED FROM PYTHON SOURCE LINES 78-106

.. code-block:: Python

    I, Q, U, V = scatterer.get_stokes_array(phi, theta)

    plt.figure(figsize=(10, 5))
    plt.subplot(2, 2, 1)
    plt.plot(phi, I, label='I')
    plt.title('Stokes I')
    plt.xlabel('Phi (radians)')
    plt.ylabel('Intensity')
    plt.legend()
    plt.subplot(2, 2, 2)
    plt.plot(phi, Q, label='Q', color='orange')
    plt.title('Stokes Q')
    plt.xlabel('Phi (radians)')
    plt.ylabel('Intensity')
    plt.legend()
    plt.subplot(2, 2, 3)
    plt.plot(phi, U, label='U', color='green')
    plt.title('Stokes U')
    plt.xlabel('Phi (radians)')
    plt.ylabel('Intensity')
    plt.legend()
    plt.subplot(2, 2, 4)
    plt.plot(phi, V, label='V', color='red')
    plt.title('Stokes V')
    plt.xlabel('Phi (radians)')
    plt.ylabel('Intensity')
    plt.legend()
    plt.tight_layout()
    plt.show()


.. image-sg:: /gallery/extras/images/sphx_glr_array_scattering_003.png
   :alt: Stokes I, Stokes Q, Stokes U, Stokes V
   :srcset: /gallery/extras/images/sphx_glr_array_scattering_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.059 seconds)


.. _sphx_glr_download_gallery_extras_array_scattering.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: array_scattering.ipynb <array_scattering.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: array_scattering.py <array_scattering.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: array_scattering.zip <array_scattering.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
