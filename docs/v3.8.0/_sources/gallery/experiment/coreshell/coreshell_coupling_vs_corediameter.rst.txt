
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/experiment/coreshell/coreshell_coupling_vs_corediameter.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_experiment_coreshell_coreshell_coupling_vs_corediameter.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_experiment_coreshell_coreshell_coupling_vs_corediameter.py:


CoreShell: Coupling vs Diameter
===============================

This example demonstrates how to compute and visualize the coupling efficiency as a function of core diameter for CoreShell scatterers using PyMieSim.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Importing the package dependencies: numpy, PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 10-19

.. code-block:: Python

    import numpy
    from TypedUnit import ureg

    from PyMieSim.experiment.detector import Photodiode
    from PyMieSim.experiment.scatterer import CoreShell
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup
    from PyOptik import Material








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Defining the source

.. GENERATED FROM PYTHON SOURCE LINES 21-28

.. code-block:: Python

    source = Gaussian(
        wavelength=1.2 * ureg.micrometer,  # 1200 nm
        polarization=90 * ureg.degree,  # Polarization angle in ureg.degrees
        optical_power=1e-3 * ureg.watt,  # 1 milliureg.watt
        NA=0.2 * ureg.AU  # Numerical Aperture
    )








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Defining the scatterer distribution

.. GENERATED FROM PYTHON SOURCE LINES 30-39

.. code-block:: Python

    scatterer = CoreShell(
        core_diameter=numpy.geomspace(100, 600, 400) * ureg.nanometer,  # Core diameters from 100 nm to 600 nm
        shell_thickness=800 * ureg.nanometer,  # Shell width of 800 nm
        core_property=Material.silver,  # Core material
        shell_property=Material.BK7,  # Shell material
        medium_property=1 * ureg.RIU,  # Surrounding medium's refractive index
        source=source
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <_io.TextIOWrapper name='/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/PyOptik/data/tabulated/silver.yml' mode='r' encoding='UTF-8'>




.. GENERATED FROM PYTHON SOURCE LINES 40-41

Defining the detector

.. GENERATED FROM PYTHON SOURCE LINES 41-49

.. code-block:: Python

    detector = Photodiode(
        NA=[0.1] * ureg.AU,  # Numerical Apertures for the detector
        phi_offset=-180.0 * ureg.degree,  # Phi offset in ureg.degrees
        gamma_offset=0.0 * ureg.degree,  # Gamma offset in ureg.degrees
        sampling=600 * ureg.AU,  # Number of sampling points
        polarization_filter=1 * ureg.degree
    )








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Setting up the experiment

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    experiment = Setup(scatterer=scatterer, source=source, detector=detector)








.. GENERATED FROM PYTHON SOURCE LINES 54-55

Measuring the coupling efficiency

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    dataframe = experiment.get('coupling')








.. GENERATED FROM PYTHON SOURCE LINES 58-60

Plotting the results
Visualizing how the coupling efficiency varies with the core diameter.

.. GENERATED FROM PYTHON SOURCE LINES 60-61

.. code-block:: Python

    dataframe.plot(x="scatterer:core_diameter")



.. image-sg:: /gallery/experiment/coreshell/images/sphx_glr_coreshell_coupling_vs_corediameter_001.png
   :alt: coreshell coupling vs corediameter
   :srcset: /gallery/experiment/coreshell/images/sphx_glr_coreshell_coupling_vs_corediameter_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: xlabel='scatterer:core_diameter', ylabel='watt'>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.342 seconds)


.. _sphx_glr_download_gallery_experiment_coreshell_coreshell_coupling_vs_corediameter.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: coreshell_coupling_vs_corediameter.ipynb <coreshell_coupling_vs_corediameter.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: coreshell_coupling_vs_corediameter.py <coreshell_coupling_vs_corediameter.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: coreshell_coupling_vs_corediameter.zip <coreshell_coupling_vs_corediameter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
