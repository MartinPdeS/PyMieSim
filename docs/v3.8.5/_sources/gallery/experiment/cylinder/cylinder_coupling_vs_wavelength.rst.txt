
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/experiment/cylinder/cylinder_coupling_vs_wavelength.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_experiment_cylinder_cylinder_coupling_vs_wavelength.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_experiment_cylinder_cylinder_coupling_vs_wavelength.py:


Cylinder: Coupling vs Wavelength
================================

This example demonstrates how to compute and visualize the coupling efficiency as a function of wavelength for cylindrical scatterers using PyMieSim.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Importing the package dependencies: numpy, PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 10-19

.. code-block:: Python

    import numpy as np
    from TypedUnit import ureg

    from PyMieSim.experiment.detector import CoherentMode
    from PyMieSim.experiment.scatterer import Cylinder
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup
    from PyOptik import Material








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Defining the source

.. GENERATED FROM PYTHON SOURCE LINES 21-29

.. code-block:: Python

    source = Gaussian(
        wavelength=np.linspace(950, 1050, 300)
        * ureg.nanometer,  # Wavelengths ranging from 950 nm to 1050 nm
        polarization=0 * ureg.degree,  # Linear polarization angle in radians
        optical_power=1e-3 * ureg.watt,  # 1 milliureg.watt
        NA=0.2 * ureg.AU,  # Numerical Aperture
    )








.. GENERATED FROM PYTHON SOURCE LINES 30-32

Defining the scatterer distribution
Here we look at cylinders with a set diameter, refractive index, and medium.

.. GENERATED FROM PYTHON SOURCE LINES 32-40

.. code-block:: Python

    scatterer = Cylinder(
        diameter=np.linspace(100, 8000, 5)
        * ureg.nanometer,  # Diameters ranging from 100 nm to 8000 nm
        property=Material.BK7,  # Material of the cylinder
        medium_property=1 * ureg.RIU,  # Refractive index of the surrounding medium
        source=source,
    )








.. GENERATED FROM PYTHON SOURCE LINES 41-42

Defining the detector

.. GENERATED FROM PYTHON SOURCE LINES 42-52

.. code-block:: Python

    detector = CoherentMode(
        mode_number="LP11",  # Specifying the LP11 mode
        NA=[0.05, 0.01] * ureg.AU,  # Array of Numerical Apertures for the detector
        phi_offset=-180 * ureg.degree,  # Phi offset in ureg.degrees
        gamma_offset=0 * ureg.degree,  # Gamma offset in ureg.degrees
        polarization_filter=None,  # No polarization filter
        sampling=300 * ureg.AU,  # Number of sampling points
        rotation=0 * ureg.degree,  # Rotation of the mode field
    )








.. GENERATED FROM PYTHON SOURCE LINES 53-54

Setting up the experiment

.. GENERATED FROM PYTHON SOURCE LINES 54-56

.. code-block:: Python

    experiment = Setup(scatterer=scatterer, source=source, detector=detector)








.. GENERATED FROM PYTHON SOURCE LINES 57-58

Measuring the coupling efficiency

.. GENERATED FROM PYTHON SOURCE LINES 58-60

.. code-block:: Python

    dataframe = experiment.get("coupling", scale_unit=True)








.. GENERATED FROM PYTHON SOURCE LINES 61-63

Plotting the results
Visualizing how the coupling efficiency varies with the wavelength.

.. GENERATED FROM PYTHON SOURCE LINES 63-64

.. code-block:: Python

    dataframe.plot(x="source:wavelength", std="scatterer:diameter")



.. image-sg:: /gallery/experiment/cylinder/images/sphx_glr_cylinder_coupling_vs_wavelength_001.png
   :alt: cylinder coupling vs wavelength
   :srcset: /gallery/experiment/cylinder/images/sphx_glr_cylinder_coupling_vs_wavelength_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 800x500 with 1 Axes>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.386 seconds)


.. _sphx_glr_download_gallery_experiment_cylinder_cylinder_coupling_vs_wavelength.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: cylinder_coupling_vs_wavelength.ipynb <cylinder_coupling_vs_wavelength.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: cylinder_coupling_vs_wavelength.py <cylinder_coupling_vs_wavelength.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: cylinder_coupling_vs_wavelength.zip <cylinder_coupling_vs_wavelength.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
