
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/extras/Qsca_vs_permittivity_vs_size_parameter.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_extras_Qsca_vs_permittivity_vs_size_parameter.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_extras_Qsca_vs_permittivity_vs_size_parameter.py:


Scattering efficiency of a sphere
=================================

PyMieSim makes it easy to create a source and a scatterer. With these objects
defined, it is possible to use PyMieSim to find the scattering efficiency of the
scatterer. This feature can be used to plot a graph of the scattering efficiency
of a sphere as a function of the permittivity and the size parameter.

.. GENERATED FROM PYTHON SOURCE LINES 12-13

Importing the package: PyMieSim

.. GENERATED FROM PYTHON SOURCE LINES 13-60

.. code-block:: Python

    import numpy
    from TypedUnit import ureg
    import matplotlib.pyplot as plt

    from PyMieSim.experiment.scatterer import Sphere
    from PyMieSim.experiment.source import Gaussian
    from PyMieSim.experiment import Setup


    permitivity = numpy.linspace(-10, 50, 400)

    index = numpy.sqrt(permitivity.astype(complex)) * ureg.RIU

    diameter = numpy.linspace(1, 200, 400) * ureg.nanometer

    source = Gaussian(
        wavelength=400 * ureg.nanometer,
        polarization=90 * ureg.degree,
        optical_power=1e-3 * ureg.watt,
        NA=0.2 * ureg.AU,
    )


    scatterer = Sphere(
        diameter=diameter, property=index, medium_property=1 * ureg.RIU, source=source
    )

    experiment = Setup(scatterer=scatterer, source=source)

    data = (
        experiment.get("Qsca", add_units=False)
        .squeeze()
        .values.reshape([permitivity.size, diameter.size])
    )

    figure, ax = plt.subplots(1, 1)
    ax.set(
        xlabel="Permittivity",
        ylabel=r"Diameter [$\mu$ m]",
        title="Scattering efficiency of a sphere",
    )

    image = ax.pcolormesh(permitivity, diameter, numpy.log(data))

    plt.colorbar(mappable=image)

    plt.show()



.. image-sg:: /gallery/extras/images/sphx_glr_Qsca_vs_permittivity_vs_size_parameter_001.png
   :alt: Scattering efficiency of a sphere
   :srcset: /gallery/extras/images/sphx_glr_Qsca_vs_permittivity_vs_size_parameter_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.727 seconds)


.. _sphx_glr_download_gallery_extras_Qsca_vs_permittivity_vs_size_parameter.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Qsca_vs_permittivity_vs_size_parameter.ipynb <Qsca_vs_permittivity_vs_size_parameter.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Qsca_vs_permittivity_vs_size_parameter.py <Qsca_vs_permittivity_vs_size_parameter.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: Qsca_vs_permittivity_vs_size_parameter.zip <Qsca_vs_permittivity_vs_size_parameter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
